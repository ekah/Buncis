<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".tmp" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
using System.Collections.Generic;
using System.ServiceModel;
using System.ServiceModel.Web;
using Buncis.Framework.Core.SupportClasses;
using Buncis.Web.Common.DataTransferObject;

namespace Buncis.Web.WebServices.Contracts
{
	// NOTE: You can use the "Rename" command on the "Refactor" menu to change the interface name "INews" in both code and config file together.
	[ServiceContract]
	public interface I<#= this.ModuleName #>
	{
		[OperationContract]
		[WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json)]
		Response<IEnumerable<<#= this.DtoClassName #>>> Get<#= this.PruralMethodWords #>(int clientId);

		[OperationContract]
		[WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json)]
		Response<<#= this.DtoClassName #>> Get<#= this.MethodWords #>(int clientId, int <#= this.IdWords #>);

		[OperationContract]
		[WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json)]
		Response<<#= this.DtoClassName #>> Update<#= this.MethodWords #>(int clientId, <#= this.DtoClassName #> <#= this.ObjectParamWords #>);

		[OperationContract]
		[WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json)]
		Response<<#= this.DtoClassName #>> Insert<#= this.MethodWords #>(int clientId, <#= this.DtoClassName #> <#= this.ObjectParamWords #>);

		[OperationContract]
		[WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json)]
		Response Delete<#= this.MethodWords #>(int clientId, int <#= this.IdWords #>);
	}
}


<#+ 
	string ModuleName = "Articles";
	string MethodWords = "Article";
	string DtoClassName = "DtoBuncisArticle";
	string PruralMethodWords = "Articles";	
	string IdWords = "articleId";
	string ObjectParamWords = "article";	
#>